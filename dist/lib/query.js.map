{"version":3,"file":"query.js","sourceRoot":"","sources":["../../src/lib/query.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,MAAM,CAAC,KAAK,UAAU,iBAAiB;IACnC,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzC,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe;IACjC,MAAM,GAAG,GAAG;;;;;;;;;;;;KAYX,CAAC;IAEF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO,IAAI,CAAA;AACf,CAAC;AAGD,MAAM,CAAC,KAAK,UAAU,WAAW;IAC7B,MAAM,GAAG,GAAG,kCAAkC,CAAC;IAC/C,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,OAAO,MAAM,CAAC,IAAI,CAAC;AACvB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,cAAsB;IACzD,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;AAE9C,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,SAAiB,EAAE,aAAqB,EAAE,MAAc;IACrF,MAAM,GAAG,GAAG;;KAEX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;AAChE,CAAC;AAGD,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,UAAkB,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAkB;IAC3G,MAAM,GAAG,GAAG;;;KAGX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAAC,UAAkB,EAAE,MAAc;IAC3E,MAAM,GAAG,GAAG;;;;KAIX,CAAC;IAEF,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;AAClD,CAAC","sourcesContent":["import client from '../config/connection.js';\n\nexport async function getAllDepartments() {\n    const sql = `\n        SELECT id, name FROM departments;\n    `;\n\n    const { rows } = await client.query(sql);\n\n    return rows;\n}\n\nexport async function getAllEmployees() {\n    const sql = `\n    SELECT \n        employees.id, \n        CONCAT(employees.first_name, ' ', employees.last_name) AS employee_name,\n        roles.job_title AS job_title,\n        departments.name AS department_name,\n        CONCAT(managers.first_name, ' ', managers.last_name) AS manager_name,\n        employees.manager_id\n    FROM employees\n    JOIN roles ON employees.role_id = roles.id\n    JOIN departments ON roles.department_id = departments.id\n    LEFT JOIN employees AS managers ON employees.manager_id = managers.id\n    `;\n\n    const { rows } = await client.query(sql);\n    return rows\n}\n\n\nexport async function getAllRoles() {\n    const sql = `SELECT id, job_title FROM roles;`;\n    const result = await client.query(sql);\n    return result.rows;\n}\n\nexport async function createDepartment(departmentName: string) {\n    const sql = `\n    INSERT INTO departments (name) VALUES ($1)\n    `;\n\n    await client.query(sql, [departmentName]);\n\n}\n\nexport async function createRole(job_title: string, department_id: string, salary: number) {\n    const sql = `\n    INSERT INTO roles (job_title, department_id, salary) VALUES ($1, $2, $3)\n    `;\n\n    await client.query(sql, [job_title, department_id, salary]);\n}\n\n\nexport async function createEmployee(first_name: string, last_name: string, role_id: string, manager_id: string) {\n    const sql = `\n    INSERT INTO employees (first_name, last_name, role_id, manager_id)\n    VALUES ($1, $2, $3, $4)\n    `;\n\n    await client.query(sql, [first_name, last_name, role_id, manager_id]);\n}\n\nexport async function updateEmployeeRoleInDB(employeeId: string, roleId: string) {\n    const sql = `\n    UPDATE employees\n    SET role_id = $1\n    WHERE id = $2\n    `;\n\n    await client.query(sql, [roleId, employeeId]);\n}"]}