{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../src/lib/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import inquirer from 'inquirer';\nimport { getAllDepartments, getAllEmployees, getAllRoles, createDepartment, createRole, createEmployee, updateEmployeeRoleInDB } from './query.js';\n\nlet showWelcome = false;\n\nexport async function addDepartment() {\n    const {department_name} = await inquirer.prompt([\n        {\n            message: 'Enter the name of the department you\\'d like to add',\n            name: 'department_name',\n            type: 'input'\n        },\n    ]);\n    \n    await createDepartment (department_name);\n}\n\n\nexport async function addRole() {\n    const departments = await getAllDepartments();\n    const departmentChoices = departments.map(department => ({\n        name: department.name,\n        value: department.id\n    }));\n    const { job_title, department_id, salary } = await inquirer.prompt([\n        {\n            message: 'Enter the name of the role:',\n            name: 'job_title',\n            type: 'input',\n        },\n        {\n            message: 'Enter the salary for the role:',\n            name: 'salary',\n            type: 'input'\n        },\n        {\n            message: 'Enter the department for the role:',\n            name: 'department_id',\n            type: 'list',\n            choices: departmentChoices\n        }\n    ]);\n\n    await createRole(job_title, department_id, salary);\n}\n\nexport async function addEmployee() {\n    const {first_name, last_name, role_id, manager_id } = await inquirer.prompt([\n        {\n            message: 'Enter the employee\\'s first name:',\n            name: 'first_name',\n            type: 'input'\n        },\n        {\n            message: 'Enter the employee\\'s last name:',\n            name: 'last_name',\n            type: 'input'\n        },\n        {\n            message: 'Enter the employee\\'s role:',\n            name: 'role_id',\n            type: 'input'\n        },\n        {\n            message: 'Enter the employee\\'s manager:',\n            name: 'manager_id',\n            type: 'input'\n        }\n]);\n    await createEmployee(first_name, last_name, role_id, manager_id);\n}\n\nexport async function updateEmployeeRole() {\n    const employeeDataArray = await getAllEmployees();\n    const roleDataArray = await getAllRoles();\n\n    const employeeChoices = employeeDataArray.map(employee => ({\n        name: `${employee.first_name} ${employee.last_name}`,\n        value: employee.id\n    }));\n\n    const roleChoices = roleDataArray.map(role => ({\n        name: role.title,\n        value: role.id\n    }));\n\n    const { employeeId } = await inquirer.prompt([\n        {\n            type: 'list',\n            name: 'employeeId',\n            message: 'Which employee would you like to update the role for?',\n            choices: employeeChoices\n        }\n    ]);\n\n    const { roleId } = await inquirer.prompt([\n        {\n            type: 'list',\n            name: 'roleId',\n            message: 'Select the new role for the employee:',\n            choices: roleChoices\n        }\n    ]);\n\n    await updateEmployeeRoleInDB(employeeId, roleId);\n\n    console.log('Employee role updated successfully.');\n}\n\nexport async function showAllDepartments() {\n    const departmentRowsArray = await getAllDepartments();\n    console.table(departmentRowsArray);\n\n}\n\nexport async function showAllRoles() {\n    const rolesRowsArray = await getAllRoles();\n    console.table(rolesRowsArray);\n}\n\nexport async function showAllEmployees() {\n    const employeeRowsArray = await getAllEmployees();\n    console.table(employeeRowsArray);\n}\nexport async function showMainMenu() {\n    if (!showWelcome) {\n        console.log('Welcome to the Employee Info Tracker');\n        showWelcome = true;\n    }\n\n    const { optionFunction } = await inquirer.prompt({\n        message: 'Please select an option',\n        name: 'optionFunction',\n        type: 'list',\n        choices: [\n            {\n                name: 'View all departments',\n                value: showAllDepartments,\n            },\n            {\n                name: 'View all roles',\n                value: showAllRoles,\n            },\n            {\n                name: 'View all employees',\n                value: showAllEmployees,\n            },\n            {\n                name: 'Add a role',\n                value: addRole,\n            },\n            {\n                name: 'Add Employee',\n                value: addEmployee\n            },\n            {\n                name: 'Update employee role',\n                value: updateEmployeeRole\n            },\n            {\n                name: 'Quit',\n                value: 0\n            }]\n    });\n    if (!optionFunction) {\n        console.log('\\nThanks for using the Employee Tracker app!');\n        return;\n    }\n    await optionFunction();\n    showMainMenu();\n}\n"]}