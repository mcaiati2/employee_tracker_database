{"version":3,"file":"seed.js","sourceRoot":"","sources":["../../src/config/seed.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,IAAI,EAAE,EAAC,MAAM,IAAI,CAAC;AAElC,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAErC,MAAM,SAAS,GAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AAChC,MAAM,SAAS,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,CAAC,EAAE,OAAO,CAAC,CAAC;AAEtF,MAAM,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAE3C,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,EAAE,OAAO,CAAC,CAAC;AAElF,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC5B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC","sourcesContent":["import {promises as fs} from 'fs';\n\nimport path from 'path';\n\nimport client from './connection.js';\n\nconst __dirname= path.resolve();\nconst schemaSQL = await fs.readFile(path.join(__dirname, './db/schema.sql'), 'utf-8');\n\nawait client.query(schemaSQL);\nconsole.log('Tables created successfully');\n\nconst seedSQL = await fs.readFile(path.join(__dirname, './db/seed.sql'), 'utf-8');\n\nawait client.query(seedSQL);\nconsole.log('Tables seeded successfully');\n"]}